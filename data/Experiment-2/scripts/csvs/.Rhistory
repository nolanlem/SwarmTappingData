#### LOYALISTS
library(ez)
library(dplyr)
options(scipen = 999)
setwd('/Users/nolanlem/Documents/kura/swarmgen/mturk-csv/usable-batch-12-7/subject-raster-plots/nt/all/csvs/')
datl <- read.csv("loyalist-imp.csv", header = T)
datnc <- read.csv('noneconvert-imp.csv', header = T)
datc <- read.csv('convert-imp.csv', header = T)
datnc
datnc[!grepl('cc_kura-B1_2020-08-09_00h01.21.424.csv', df$subject),]
datnc[!grepl('cc_kura-B1_2020-08-09_00h01.21.424.csv', datnc$subject),]
clear
datnc
datnc = datnc[!grepl('cc_kura-B1_2020-08-09_00h01.21.424.csv', datnc$subject),]
datnc
datnc = datnc[!grepl('bb_kura-A2_2020-08-08_23h32.56.541.csv', datnc$subject),]
library(plyr)
count(dat, "subject")
dat <- read.csv('all.csv', header=T)
datl <- read.csv("loyalist-imp.csv", header = T)
datc <- read.csv('convert-imp.csv', header = T)
datnc <- read.csv('noneconvert-imp.csv', header = T)
# remove bb_, cc_
datnc = datnc[!grepl('cc_kura-B1_2020-08-09_00h01.21.424.csv', datnc$subject),]
datnc = datnc[!grepl('bb_kura-A2_2020-08-08_23h32.56.541.csv', datnc$subject),]
count(dat, "subject")
dat = dat[!grepl('bb_kura-A2_2020-08-08_23h32.56.541.csv', dat$subject),]
dat = dat[!grepl('cc_kura-B1_2020-08-09_00h01.21.424.csv', dat$subject),]
count(dat, "subject")
dat$coupling <- factor(dat$coupling, levels=c("none", "weak", "medium", "strong"))
dat$section <- factor(dat$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datl$coupling <- factor(datl$coupling, levels=c("none", "weak", "medium", "strong"))
datl$section <- factor(datl$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datnc$coupling <- factor(datnc$coupling, levels=c("none", "weak", "medium", "strong"))
datnc$section <- factor(datnc$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datc$coupling <- factor(datc$coupling, levels=c("none", "weak", "medium", "strong"))
datc$section <- factor(datc$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
anova_mx <- ezANOVA(data = datnc,
dv=mx,
wid = subject,
within = .(coupling, section),
detailed = T,
type=1)
print(anova_mx)
with(datnc, tapply(mx, list(coupling), mean, na.rm=TRUE))
datnc_none <- subset(datnc, coupling == 'none')
datnc_weak <- subset(datnc, coupling == 'weak')
datnc_medium <- subset(datnc, coupling == 'medium')
datnc_strong <- subset(datnc, coupling == 'strong')
pairwise.t.test(datnc_none$mx,
datnc_none$section,
paired = TRUE,
p.adjust.method = "bonferroni")
#### #### #### #### #### #### #### #### #### #### ####
##### SX HYBRID ANOVA
anova_sx <- ezANOVA(data = datnc,
dv=sx,
wid = subject,
within = .(coupling, section),
detailed = T,
type=1)
print(anova_sx)
### POSTHOC COUPLING
pairwise.t.test(datnc$sx,
datnc$coupling,
paired = TRUE,
p.adjust.method = "bonferroni")
#### MX LOYALIST ANOVA
anova_mx <- ezANOVA(data = datl,
dv=mx,
wid = subject,
within = .(coupling, section),
detailed = T,
type=1)
print(anova_mx)
with(datnc, tapply(mx, list(coupling), mean, na.rm=TRUE))
pairwise.t.test(datnc_none$mx,
datnc_none$section,
paired = TRUE,
p.adjust.method = "bonferroni")
setwd('/Users/nolanlem/Documents/kura/swarmgen/mturk-csv/usable-batch-12-7/subject-raster-plots/nt/all/dispersion-plots/all-subjects/')
install.packages('lme4')
install.packages("lme4")
library(dplyr)
library(tidyr)
df = read.csv('stats-d-s-drop.csv', header=TRUE, stringsAsFactors= TRUE)
# change labels: loyalist->regular, noneconvert -> hybrid, convert -> fast
library(dplyr)
df <- df %>%
mutate(subcat = recode(subcat, loyalist = 'regular', noneconvert = 'hybrid', convert =  'fast' ))
# 1 sample t-test, comparing dense vs sparse taps within subject
pairwise.t.test(df$mxiti,
df$ds,
paired = TRUE,
p.adjust.method = "bonferroni")
aggregate(df$mxiti, list(df$ds), FUN=mean)
# subset between dense and sparse mxitis
df.d = subset(df, ds == 'd')
df.s = subset(df, ds == 's')
# within subject, 2-sample test, dense vs. subject category
pairwise.t.test(df.d$mxiti,
df.d$subcat,
paired = FALSE,
p.adjust.method = "bonferroni")
setwd('/Users/nolanlem/Documents/kura/swarmgen/mturk-csv/usable-batch-12-7/subject-raster-plots/nt/all/dispersion-plots/all-subjects/')
install.packages('lme4')
library(dplyr)
library(tidyr)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
df.k.3d = subset(df, k.means.grp=='3d')
df.k.12 = subset(df, k.means.grp=='1')
df.k.3s = subset(df, k.means.grp=='3s')
df.k.3 = subset(df, k=='3')
library(broom)
library(clipr)
library(magrittr)
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
print(df.k.3d)
df.k.3d = subset(df, k.means.grp=='3d')
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
df.k.3d = subset(df, k.means.grp=='3d')
abc <- c(loyalist="A", noneconvert="hybrid", convert="fast")
df.k.3d$subject.cat.rev <- as.character(abc[df.k.3d$subject.cat])
df.k.3s$subject.cat.rev <- as.character(abc[df.k.3s$subject.cat])
df.k.3d$subject.cat.rev
print(df.k.3d)
library(broom)
library(clipr)
library(magrittr)
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
# iti + (R * tempo)*group
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
summary(df.lm)
View(df)
View(df)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
df=df[!grepl("bb_kura-A2_2020-08-08_23h32.56.541.csv",df$Strings),]
df=df[!grepl("cc_kura-B1_2020-08-09_00h01.21.424.csv",df$Strings),]
View(df)
View(df)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
df = df[!grepl("bb_kura-A2_2020-08-08_23h32.56.541.csv", df$column),]
df = df[!grepl("cc_kura-B1_2020-08-09_00h01.21.424.csv", df$column),]
View(df)
View(df)
View(df)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
df = read.csv('subjects-disp-centroid-d-s-R.csv', header=TRUE, stringsAsFactors= TRUE)
View(df)
# remove repeats bb, cc
df[!grepl("bb_kura-A2_2020-08-08_23h32.56.541.csv", df$colum),]
df[!grepl("cc_kura-B1_2020-08-09_00h01.21.424.csv", df$column),]
df.k.12 = subset(df, k.means.grp=='1')
df.k.3d = subset(df, k.means.grp=='3d')
df.k.3s = subset(df, k.means.grp=='3s')
df.k.3 = subset(df, k=='3')
df.k.3d = subset(df, k.means.grp=='3d')
abc <- c(loyalist="A", noneconvert="hybrid", convert="fast")
df.k.3d$subject.cat.rev <- as.character(abc[df.k.3d$subject.cat])
df.k.3s$subject.cat.rev <- as.character(abc[df.k.3s$subject.cat])
df.k.3d$subject.cat.rev
library(broom)
library(clipr)
library(magrittr)
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
# iti + (R * tempo)*group
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
# iti + (R * tempo)*group
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
#SPARSE: iti + (R * tempo)*group
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
# iti + (R * tempo)*group
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
summary(df.lm)
#SPARSE: iti + (R * tempo)*group
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s)
summary(df.lm)
df.lm <-lm(df.k.3d$tap.disp ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d) %>%
tidy() %>%
write_clip()
df.lm <-lm(df.k.3d$tap.disp ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
summary(df.lm)
df.lm <-lm(df.k.3s$tap.disp ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s) %>%
tidy() %>%
write_clip()
#create table
data <- matrix(c(6, 9, 3, 11, 15, 6), ncol=3, byrow=TRUE)
colnames(data) <- c("Reg","Hyb","Fast")
rownames(data) <- c("Female","Male")
sdata <- as.table(data)
#view table
sdata
#Perform Chi-Square Test of Independence
chisq.test(sdata)
data <- matrix(c(15, 16, 8, 2, 8, 1), ncol=3, byrow=TRUE)
colnames(data) <- c("Reg","Hyb","Fast")
rownames(data) <- c("Right","Left")
hdata <- as.table(data)
#view table
hdata
#Perform Chi-Square Test of Independence
chisq.test(hdata)
#Perform Chi-Square Test of Independence
chisq.test(hdata)
#### LOYALISTS
library(ez)
library(dplyr)
options(scipen = 999)
setwd('/Users/nolanlem/Documents/kura/swarmgen/mturk-csv/usable-batch-12-7/subject-raster-plots/nt/all/csvs/')
datl <- read.csv("loyalist-imp.csv", header = T)
datnc <- read.csv('noneconvert-imp.csv', header = T)
datc <- read.csv('convert-imp.csv', header = T)
dat <- read.csv('all.csv', header=T)
library(plyr)
count(dat, "subject")
dat$coupling <- factor(dat$coupling, levels=c("none", "weak", "medium", "strong"))
dat$section <- factor(dat$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datl$coupling <- factor(datl$coupling, levels=c("none", "weak", "medium", "strong"))
datl$section <- factor(datl$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datnc$coupling <- factor(datnc$coupling, levels=c("none", "weak", "medium", "strong"))
datnc$section <- factor(datnc$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
datc$coupling <- factor(datc$coupling, levels=c("none", "weak", "medium", "strong"))
datc$section <- factor(datc$beatsection, levels=c("0", "1", "2", "3", "4", "5", "6"))
#all
anova_mx <- ezANOVA(data = dat,
dv=mx,
wid = subject,
within = .(coupling, section),
detailed = T,
type=1)
summary(anova_mx)
dat
print(anova_mx)
#all
anova_mx <- ezANOVA(data = dat,
dv=mx,
within = .(coupling, section),
detailed = T,
type=1)
print(anova_mx)
library(ggplot2)
library(tidyverse)
library(ggpubr)
####### Take all k=3d, use R as explanatory variable, and base tempo, and
### group (regular, hybrid, and  fast) try to make linear model (lm) .
## See if it produces interactions between coupling or tempo
Iti ~ lm(R + tempo*group)
df.k.3 <- subset(df, (df$k == '3d') | (df$k == '3s'))
df.lm <-lm(df.k.3$tap.mean.iti ~ df.k.3$base.tempo * df.k.3$subject.cat, data = df.k.3)
df.k.3d = subset(df, k.means.grp=='3d')
abc <- c(loyalist="A", noneconvert="hybrid", convert="fast")
df.k.3d$subject.cat.rev <- as.character(abc[df.k.3d$subject.cat])
df.k.3s$subject.cat.rev <- as.character(abc[df.k.3s$subject.cat])
library(broom)
library(clipr)
library(magrittr)
df.lm <-lm(df.k.3d$tap.mean.iti ~ (df.k.3d$R.model * df.k.3d$base.tempo)*df.k.3d$subject.cat.rev, data = df.k.3d)
summary(df.lm)
df.lm <-lm(df.k.3s$tap.mean.iti ~ (df.k.3s$R.model * df.k.3s$base.tempo)*df.k.3s$subject.cat.rev, data = df.k.3s)
summary(df.lm)
pwd
####################### music
#setwd('/Users/tfujioka/Documents/Nolan/')
mdata <- read.csv("myrs_kura.csv", header = T)
setwd('/Users/nolanlem/Desktop/takako-2-10-23/final-rev/')
####################### music
#setwd('/Users/tfujioka/Documents/Nolan/')
mdata <- read.csv("myrs_kura.csv", header = T)
# check normality
shapiro.test(mdata$myrs)
####################### music
#setwd('/Users/tfujioka/Documents/Nolan/')
mdata <- read.csv("myrs_kura.csv", header = T)
# check normality
shapiro.test(mdata$myrs)
adata <- read.csv("age_kura.csv", header = T)
# check normality
shapiro.test(adata$age)
# instead, run Kruskal Wallis test
kruskal.test(age ~ group, data = adata)
mean(adata$age)
adata.reg <- subset(adata, group == 'reg')
adata.hyb <- subset(adata, group == 'hyb')
adata.fast <- subset(adata, group == 'fast')
mean(adata.fast$age)
mean(adata.reg$age)
mean(adata.hyb$age)
mean(adata.fast$age)
std(adata.reg$age)
sd(adata.reg$age)
sd(adata.hyb$age)
sd(adata.fast$age)
# instead, run Kruskal Wallis test
kruskal.test(myrs ~ group, data = mdata)
mean(adata$age)
sd(adata$age)
mean(mdata$myrs)
sd(mdata$myrs)
#### LOYALISTS
library(ez)
library(dplyr)
options(scipen = 999)
#
setwd('../csvs/')
setwd('/Users/nolanlem/Desktop/data/Experiment-2/scripts/R')
#
setwd('../csvs/')
datl <- read.csv("regular.csv", header = T)
datnc <- read.csv('hybrid.csv', header = T)
datc <- read.csv('fast.csv', header = T)
dat <- read.csv('all.csv', header=T)
library(plyr)
count(dat, "subject")
datl <- read.csv("regular.csv", header = T)
count(datl)
count(datl, 'subject')
count(datnc, 'subject')
count(datf, 'subject')
count(datc, 'subject')
count(dat, "subject")
dat <- read.csv("../csvs/t-params-curve-fit.csv", header = T)
dat.t.reg <- subset(dat, timbre == 't' & group == 'regular')
dat.n.reg <- subset(dat, timbre == 'n' & group == 'regular')
dat.t.hyb <- subset(dat, timbre == 't' & group == 'hybrid')
dat.n.hyb <- subset(dat, timbre == 'n' & group == 'hybrid')
dat.t.hybreg <- subset(dat, timbre == 't' & group == 'hybreg')
dat.n.hybreg <- subset(dat, timbre == 'n' & group == 'hybreg')
dat.t.fast <- subset(dat, timbre == 't' & group == 'fast')
dat.n.fast <- subset(dat, timbre == 'n' & group == 'fast')
##### A
t.test(dat.n.reg$A,
dat.t.reg$A,
paired = TRUE,
p.adjust.method = "bonferroni")
t.test(dat.n.hyb$A,
dat.t.hyb$A,
paired = TRUE,
p.adjust.method = "bonferroni")
t.test(dat.n.hybreg$A,
dat.t.hybreg$A,
paired = TRUE,
p.adjust.method = "bonferroni")
t.test(dat.n.fast$A,
dat.t.fast$A,
paired = TRUE,
p.adjust.method = "bonferroni")
